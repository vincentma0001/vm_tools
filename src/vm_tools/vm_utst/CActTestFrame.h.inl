// ================================================================================================ //
// ==                                                                                            == //
// ==                                    CActTestFrame.h.inl                                     == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Author               : v.m. ( vincent_ma0001@hotmail.com )                               == //
// ==   Version              : 1.0.0.0                                                           == //
// ==   Create Time          : 2020-11-12 22:42                                                  == //
// ==   Modify Time          : 2020-11-23 13:01                                                  == //
// ==   Issue  List          :                                                                   == //
// ==   Change List          :                                                                   == //
// ==     [    0.0.0.0     ] - Basic version                                                     == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Copyright(c) : This file has copyrighted by v.m., the all right will been reserved!      == //
// ==                                                                                            == //
// ================================================================================================ //


// ================================================================================================ //
// == Include files :                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// [ Include files ] {{{
//.vm's.function.depend.on.included
#include <vm_cfgs.h>
#include <vm_tools/vm_util.h>
#include <vm_tools/vm_funcs.h>
//.vm's.function.files.inlcuded
#include "CActTestFrame.h"
// }}}
// ================================================================================================ //

// ================================================================================================ //
AC_FUNC_BEGIN( ac_func_help, "help" )
    pFrame->ShowHelps<128>();
AC_FUNC_ENDED

AC_FUNC_BEGIN( ac_func_stop, "stop" )
    pFrame->mbLoop = false;
AC_FUNC_ENDED
// ================================================================================================ //


// ================================================================================================ //
// [ CAct realization ] {{{

// ================================================================================================ //
// ==  Class CAct Construct && Destruct realization                                              == //
// ================================================================================================ //
// [ Class CAct Construct && Destruct realization ] {{{

// ================================================================================================ //
// ==  Methord : CAct::CAct()                                                                    == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Construct define
inline vm::CAct::CAct(  ):mstrActName(vT(""))
// {{{
{
}
// }}} End of func CAct::CAct()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CAct::CAct(...)                                                                 == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Construct define
inline vm::CAct::CAct( const tchar* const cpActName ) : mstrActName( cpActName )
// {{{
{
}
// }}} end of func CAct::CAct(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : virtual CAct::~CAct()                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Destruct define
inline vm::CAct::~CAct(  )
// {{{
{
}
// }}} End of func CAct::~CAct()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CAct::CAct()                                                                    == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Copy construct define
inline vm::CAct::CAct( const CAct &obj )
// {{{
{
    *this = obj;
}
// }}} End of func CAct::CAct()
// ================================================================================================ //

// }}} ![ Class CAct Construct && Destruct realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CAct operator realization                                                           == //
// ================================================================================================ //
// [ Class CAct operator realization ] {{{

// ================================================================================================ //
// ==  Methord : CAct::operator = ()                                                             == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Assignment operation
// ==  Return  : CAct&            - [O] this object
inline vm::CAct& vm::CAct::operator = ( const CAct &obj )
// {{{
{
    return *this;
}
// }}} End of func CAct::operator=()
// ================================================================================================ //

// }}} ![ Class CAct operator realization ]
// ================================================================================================ //

// ================================================================================================ //
// ==  Class CAct Functional realization                                                         == //
// ================================================================================================ //
// [ Class CAct Functional realization ] {{{

// ================================================================================================ //
// ==  Methord : CAct::cs_name(...)                                                              == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Get act name
// ==  Return  : const tchar*     - [O] act name string 
inline const tchar* vm::CAct::cs_name( void )
// {{{
{
    return mstrActName.c_str();
}
// }}} end of func CAct::cs_name(...)
// ================================================================================================ //

// }}} ![ Class CAct Functional realization ]
// ================================================================================================ //

// }}} ! CAct realization
// ================================================================================================ //


// ================================================================================================ //
// [ CActTestFrame realization ] {{{

// ================================================================================================ //
// ==  Class CActTestFrame Construct && Destruct realization                                     == //
// ================================================================================================ //
// [ Class CActTestFrame Construct && Destruct realization ] {{{

// ================================================================================================ //
// ==  Methord : CActTestFrame::CActTestFrame()                                                  == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Construct define
inline vm::CActTestFrame::CActTestFrame(  )
    : mbLoop(true)
// {{{
{
}
// }}} End of func CActTestFrame::CActTestFrame()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : virtual CActTestFrame::CActTestFrame()                                          == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Destruct define
inline vm::CActTestFrame::~CActTestFrame(  )
// {{{
{
}
// }}} End of func CActTestFrame::~CActTestFrame()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CActTestFrame::CActTestFrame()                                                  == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Copy construct define
inline vm::CActTestFrame::CActTestFrame( const CActTestFrame &obj )
// {{{
{
    *this = obj;
}
// }}} End of func CActTestFrame::CActTestFrame()
// ================================================================================================ //

// }}} ![ Class CActTestFrame Construct && Destruct realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CActTestFrame operator realization                                                  == //
// ================================================================================================ //
// [ Class CActTestFrame operator realization ] {{{

// ================================================================================================ //
// ==  Methord : CActTestFrame::operator = ()                                                    == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Assignment operation
// ==  Return  : CActTestFrame&   - [O] this object
inline vm::CActTestFrame& vm::CActTestFrame::operator = ( const CActTestFrame &obj )
// {{{
{
    return *this;
}
// }}} End of func CActTestFrame::operator=()
// ================================================================================================ //

// }}} ![ Class CActTestFrame operator realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CActTestFrame Functional realization                                                == //
// ================================================================================================ //
// [ Class CActTestFrame Functional realization ] {{{

// ================================================================================================ //
// ==  Methord : CActTestFrame::StopLoop(...)                                                    == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Stop CActTestFrame's main loop
inline void vm::CActTestFrame::StopLoop( void )
// {{{
{
    mbLoop = false;
}
// }}} end of func CActTestFrame::StopLoop(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CActTestFrame::RegAct(...)                                                      == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Regist an act object to CActTestFrame
// ==  Return  : bool             - [O] true  - regist act sucess
// ==                                   false - regist act failed
template< typename tAct  >
inline bool vm::CActTestFrame::RegAct( void )
// {{{
{
    vm::CAct* lpAction = new tAct;
    bool lbRet = mActMap.Insert( lpAction->mstrActName, lpAction );
    return lbRet;
}
// }}} end of func CActTestFrame::RegAct(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CActTestFrame::Action(...)                                                      == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Do CActTestFrame main loop
inline void vm::CActTestFrame::Run( void )
// {{{
{
    bool lbRetForRegAct = RegAct<ac_func_stop>( );
    if( lbRetForRegAct == false )
        return;
    lbRetForRegAct      = RegAct<ac_func_help>( );
    if( lbRetForRegAct == false )
        return;

    bool lbRetForReg = Regist();
    if( lbRetForReg == false )
        return;

    while( mbLoop == true )
    {
        // Show title
        fputs( vT("CMD > "), stdout);

        // Get input line
        tchar lszBuf[2048] = {0x00};
        vm::v_inpput_line( lszBuf, sizeof(lszBuf) );
        vm::CArgs<_CACTTESTFRAME_MAX_ARGS_> loArgs;
        loArgs.Splite( lszBuf, vT(" ") );

        vString lstrName = vT("");
        if( loArgs[0] != nullptr )
            lstrName = loArgs[0];

        vm::CActTestFrame::tMapItor loIter = mActMap.Find( lstrName );
        if( loIter == mActMap.Last() )
        {
            vLine(vT("Unknown cmd : %s"), lstrName.c_str() );
            ShowHelps<128>();
            continue;
        }

        vStdMapVal(loIter)->todo( this, loArgs );

    }
}
// }}} end of func CActTestFrame::Action(...)
// ================================================================================================ //

// }}} ![ Class CActTestFrame Functional realization ]
// ================================================================================================ //


// }}} ! CActTestFrame realization
// ================================================================================================ //


// ================================================================================================ //
// ==                                        End of file                                         == //
// ================================================================================================ //
