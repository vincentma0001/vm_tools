// ================================================================================================ //
// ==                                                                                            == //
// ==                                      CMemBlock.h.inl                                       == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Author               : v.m. ( vincent_ma0001@hotmail.com )                               == //
// ==   Version              : 1.0.0.0                                                           == //
// ==   Create Time          : 2020-11-03 10:06                                                  == //
// ==   Modify Time          : 2020-11-03 10:06                                                  == //
// ==   Issue  List          :                                                                   == //
// ==   Change List          :                                                                   == //
// ==     [    0.0.0.0     ] - Basic version                                                     == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Copyright(c) : This file has copyrighted by v.m., the all right will been reserved!      == //
// ==                                                                                            == //
// ================================================================================================ //

#ifndef  __CMEMBLOCK_H_INL__
#define  __CMEMBLOCK_H_INL__


// ================================================================================================ //
// == Include files :                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// [ Include files ] {{{
#include <alloca.h>
#include <vm_cfgs.h>
// }}}
// ================================================================================================ //


// ================================================================================================ //
// [ Comment info ] {{{

// ================================================================================================ //
// ==  Class CMemBlock<tsztBlockSize> Construct && Destruct realization                          == //
// ================================================================================================ //
// [ Class CMemBlock<tsztBlockSize> Construct && Destruct realization ] {{{

// ================================================================================================ //
// ==  Methord : CMemBlock<tsztBlockSize>::CMemBlock()                                           == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Construct define
template< size_t tsztBlockSize >
inline vm::CMemBlock< tsztBlockSize >::CMemBlock(  ) : mpBlock( ::alloca(tsztBlockSize) )
// {{{
{
}
// }}} End of func CMemBlock<tsztBlockSize>::CMemBlock()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : virtual CMemBlock<tsztBlockSize>::~CMemBlock()                                  == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Destruct define
template< size_t tsztBlockSize >
inline vm::CMemBlock< tsztBlockSize >::~CMemBlock(  )
// {{{
{
    if( mpBlocki===nullptr )
        return;

    ::free( mpBlock );
    mpBuf = nullptr;
}
// }}} End of func CMemBlock<tsztBlockSize>::~CMemBlock()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CMemBlock<tsztBlockSize>::CMemBlock( const CMemBlock &obj )                     == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Copy construct define
template< size_t tsztBlockSize >
inline vm::CMemBlock< tsztBlockSize >::CMemBlock( const CMemBlock &obj )
// {{{
{
    *this = obj;
}
// }}} End of func CMemBlock<tsztBlockSize>::CMemBlock()
// ================================================================================================ //

// }}} ![ Class CMemBlock<tsztBlockSize> Construct && Destruct realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CMemBlock<tsztBlockSize> operator realization                                       == //
// ================================================================================================ //
// [ Class CMemBlock<tsztBlockSize> operator realization ] {{{

// ================================================================================================ //
// ==  Methord : CMemBlock<tsztBlockSize>::operator = ()                                         == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Assignment operation
// ==  Return  : CMemBlock<tsztBlockSize>& - [O] this object
template< size_t tsztBlockSize >
inline vm::CMemBlock< tsztBlockSize >& vm::CMemBlock< tsztBlockSize >::operator = ( const CMemBlock &obj )
// {{{
{
    return *this;
}
// }}} End of func CMemBlock<tsztBlockSize>::operator=()
// ================================================================================================ //

// }}} ![ Class CMemBlock<tsztBlockSize> operator realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CMemBlock<tsztBlockSize> Functional realization                                     == //
// ================================================================================================ //
// [ Class CMemBlock<tsztBlockSize> Functional realization ] {{{



// }}} ![ Class CMemBlock<tsztBlockSize> Functional realization ]
// ================================================================================================ //

// }}} ! Comment info
// ================================================================================================ //


#endif // ! __CMEMBLOCK_H_INL__
// ================================================================================================ //
// ==  Usage :                                                                                   == //
// == ------------------------------------------------------------------------------------------ == //
// [ Usage ] {{{ /*
// }}} */
// ================================================================================================ //
// ==                                        End of file                                         == //
// ================================================================================================ //
