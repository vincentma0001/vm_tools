// ================================================================================================ //
// ==                                                                                            == //
// ==                                       CLocale.h.inl                                        == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Author               : v.m. ( vincent_ma0001@hotmail.com )                               == //
// ==   Version              : 1.0.0.0                                                           == //
// ==   Create Time          : 2020-10-15 10:51:04                                               == //
// ==   Modify Time          : 2020-11-11 16:10:42                                               == //
// ==   Issue  List          :                                                                   == //
// ==   Change List          :                                                                   == //
// ==     [    0.0.0.0     ] - Basic version                                                     == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Copyright(c) : This file has copyrighted by v.m., the all right will been reserved!      == //
// ==                                                                                            == //
// ================================================================================================ //

#ifndef  __CLOCALE_H_INL__
#define  __CLOCALE_H_INL__


// ================================================================================================ //
// == Include files :                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// [ Include files ] {{{
#include <locale.h>
// }}}
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CLocale Construct && Destruct realization                                           == //
// ================================================================================================ //
// [ Class CLocale Construct && Destruct realization ] {{{

// ================================================================================================ //
// ==  Methord : CLocale::CLocale()                                                              == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Construct define
inline vm::CLocale::CLocale(  )
// {{{
{
}
// }}} End of func CLocale::CLocale()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : virtual CLocale::CLocale()                                                      == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Destruct define
inline vm::CLocale::~CLocale(  )
// {{{
{
}
// }}} End of func CLocale::~CLocale()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CLocale::CLocale()                                                              == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Copy construct define
inline vm::CLocale::CLocale( const vm::CLocale &obj )
// {{{
{
    *this = obj;
}
// }}} End of func CLocale::CLocale()
// ================================================================================================ //

// }}} ![ Class CLocale Construct && Destruct realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CLocale operator realization                                                        == //
// ================================================================================================ //
// [ Class CLocale operator realization ] {{{

// ================================================================================================ //
// ==  Methord : CLocale::operator = ()                                                          == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Assignment operation
// ==  Return  : CLocale&         - [O] this object
inline vm::CLocale& vm::CLocale::operator = ( const vm::CLocale &obj )
// {{{
{
    return *this;
}
// }}} End of func CLocale::operator=()
// ================================================================================================ //

// }}} ![ Class CLocale operator realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CLocale Functional realization                                                      == //
// ================================================================================================ //
// [ Class CLocale Functional realization ] {{{


// ================================================================================================ //
// ==  Methord : CLocale::Set(...)                                                               == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Set c locale mode
// ==  Return  : char*            - [O] Current locale mode
// ==  Params  : ciCategory       - [I] Category of locale
// ==            cpLocale         - [I] Locale & encoding string
inline char* vm::CLocale::Set( const int ciCategory, const char* const cpLocale )
// {{{
{
    return setlocale( ciCategory, cpLocale );
}
// }}} end of func CLocale::Set(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CLocale::Zh_CN(...)                                                             == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Set zn_CN mode
// ==  Return  : char*            - [O] Current locale mode 
// ==  Params  : ciCategory       - [I] Category of locale
inline char* vm::CLocale::zh_CN( const int ciCategory )
// {{{
{
    return setlocale( ciCategory, "zh_CN" );
}
// }}} end of func CLocale::Zh_CN(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CLocale::zh_CN_utf_8(...)                                                       == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Set zh_CN.utf-8 mode
// ==  Return  : char*            - [O] Current locale mode
// ==  Params  : ciCategory       - [I] Category of locale
inline char* vm::CLocale::zh_CN_utf_8( const int ciCategory )
// {{{
{
    return setlocale( ciCategory, "zh_CN.UTF-8" );
}
// }}} end of func CLocale::zh_CN_utf_8(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CLocale::en_US(...)                                                             == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Set en_us mode
// ==  Return  : char*            - [O] Current locale mode
// ==  Params  : ciCategory       - [I] Category of locale
inline char* vm::CLocale::en_US( const int ciCategory )
// {{{
{
    return setlocale( ciCategory, "en_US" );
}
// }}} end of func CLocale::en_US(...)
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CLocale::en_US_utf_8(...)                                                       == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Set en_US.utf-8 mode
// ==  Return  : char*            - [O] Current locale mode
// ==  Params  : ciCategory       - [I] Category of locale
inline char* vm::CLocale::en_US_utf_8( const int ciCategory )
// {{{
{
    return setlocale( ciCategory, "en_US" );
}
// }}} end of func CLocale::en_US_utf_8(...)
// ================================================================================================ //

// }}} ![ Class CLocale Functional realization ]
// ================================================================================================ //


#endif // ! __CLOCALE_H_INL__
// ================================================================================================ //
// ==  Usage :                                                                                   == //
// == ------------------------------------------------------------------------------------------ == //
// [ Usage ] {{{ /*
// }}} */
// ================================================================================================ //
// ==                                        End of file                                         == //
// ================================================================================================ //
