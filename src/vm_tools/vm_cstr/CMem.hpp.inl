// ================================================================================================ //
// ==                                                                                            == //
// ==                                       CMem.hpp.inl                                         == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Author               : v.m. ( vincent_ma0001@hotmail.com )                               == //
// ==   Version              : 1.0.0.0                                                           == //
// ==   Create Time          : 2020-10-08 13:43:58                                               == //
// ==   Modify Time          : 2020-11-02 12:10:47                                               == //
// ==   Issue  List          :                                                                   == //
// ==   Change List          :                                                                   == //
// ==     [    0.0.0.0     ] - Basic version                                                     == //
// ==                                                                                            == //
// == ------------------------------------------------------------------------------------------ == //
// ==                                                                                            == //
// ==   Copyright(c) : This file has copyrighted by v.m., the all right will been reserved!      == //
// ==                                                                                            == //
// ================================================================================================ //

#ifndef  __CMEM_HPP_INL__
#define  __CMEM_HPP_INL__


// ================================================================================================ //
// ==  Class CMem<tsztBufSize> Construct && Destruct realization                                 == //
// ================================================================================================ //
// [ Class CMem<tsztBufSize> Construct && Destruct realization ] {{{

// ================================================================================================ //
// ==  Methord : CMem<tsztBufSize>::CMem()                                                       == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Construct define
template< size_t tsztBufSize >
inline vm::CMem<tsztBufSize>::CMem(  ) : CMemPtr( mBuf, sizeof(mBuf) ), mBuf{0x00}
// {{{
{
}
// }}} End of func CMem<tsztBufSize>::CMem()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : virtual CMem<tsztBufSize>::CMem()                                               == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Destruct define
template< size_t tsztBufSize >
inline vm::CMem<tsztBufSize>::~CMem(  )
// {{{
{
}
// }}} End of func CMem<tsztBufSize>::~CMem()
// ================================================================================================ //

// ================================================================================================ //
// ==  Methord : CMem<tsztBufSize>::CMem()                                                       == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Copy construct define
template< size_t tsztBufSize >
inline vm::CMem<tsztBufSize>::CMem( const vm::CMem<tsztBufSize> &obj )
// {{{
{
    *this = obj;
}
// }}} End of func CMem<tsztBufSize>::CMem()
// ================================================================================================ //

// }}} ![ Class CMem<tsztBufSize> Construct && Destruct realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CMem<tsztBufSize> operator realization                                              == //
// ================================================================================================ //
// [ Class CMem<tsztBufSize> operator realization ] {{{

// ================================================================================================ //
// ==  Methord : CMem<tsztBufSize>::operator = ()                                                == //
// == ------------------------------------------------------------------------------------------ == //
// ==  Brief   : Assignment operation
// ==  Return  : CMem<tsztBufSize>& - [O] this object
template< size_t tsztBufSize >
inline vm::CMem<tsztBufSize>& vm::CMem<tsztBufSize>::operator = ( const vm::CMem<tsztBufSize> &obj )
// {{{
{
    return *this;
}
// }}} End of func CMem<tsztBufSize>::operator=()
// ================================================================================================ //

// }}} ![ Class CMem<tsztBufSize> operator realization ]
// ================================================================================================ //


// ================================================================================================ //
// ==  Class CMem<tsztBufSize> Functional realization                                            == //
// ================================================================================================ //
// [ Class CMem<tsztBufSize> Functional realization ] {{{



// }}} ![ Class CMem<tsztBufSize> Functional realization ]
// ================================================================================================ //

#endif // ! __CMEM_HPP_INL__
// ================================================================================================ //
// ==  Usage :                                                                                   == //
// == ------------------------------------------------------------------------------------------ == //
// [ Usage ] {{{ /*
// }}} */
// ================================================================================================ //
// ==                                        End of file                                         == //
// ================================================================================================ //
